$date
	Tue Dec  6 20:37:18 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$scope module CPU $end
$var wire 32 ! alu_op1 [31:0] $end
$var wire 32 " alu_op2 [31:0] $end
$var wire 1 # clk_i $end
$var wire 32 $ m1 [31:0] $end
$var wire 32 % m2 [31:0] $end
$var wire 1 & rst_i $end
$var wire 1 ' start_i $end
$var wire 32 ( rs2 [31:0] $end
$var wire 32 ) rs1 [31:0] $end
$var wire 1 * regwrite $end
$var wire 32 + pc [31:0] $end
$var wire 32 , next_pc [31:0] $end
$var wire 32 - m_out [31:0] $end
$var wire 1 . is_zero $end
$var wire 32 / instruction [31:0] $end
$var wire 32 0 imm [31:0] $end
$var wire 1 1 alusrc $end
$var wire 4 2 aluctrl [3:0] $end
$var wire 32 3 alu_out [31:0] $end
$scope module ALU $end
$var wire 32 4 op1 [31:0] $end
$var wire 32 5 op2 [31:0] $end
$var wire 1 . zero $end
$var wire 5 6 shamt [4:0] $end
$var wire 4 7 aluctrl [3:0] $end
$var reg 32 8 result [31:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 9 data2_i [31:0] $end
$var wire 32 : data_o [31:0] $end
$var wire 32 ; data1_i [31:0] $end
$upscope $end
$scope module Control $end
$var wire 3 < funct3 [2:0] $end
$var wire 7 = funct7 [6:0] $end
$var wire 7 > opcode [6:0] $end
$var wire 1 * regwrite $end
$var wire 1 ? is_store $end
$var wire 1 @ is_r_type $end
$var wire 1 A is_load $end
$var wire 1 B is_i_type $end
$var wire 1 C is_beq $end
$var wire 1 1 alusrc $end
$var wire 4 D aluctrl [3:0] $end
$var reg 2 E aluop [1:0] $end
$scope module alucontrol $end
$var wire 2 F aluop [1:0] $end
$var wire 3 G funct3 [2:0] $end
$var wire 7 H funct7 [6:0] $end
$var reg 4 I aluctrl [3:0] $end
$upscope $end
$upscope $end
$scope module Imm_Gen $end
$var wire 7 J opcode [6:0] $end
$var wire 32 K instruction [31:0] $end
$var reg 32 L imm [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 M instr_o [31:0] $end
$var wire 32 N addr_i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 32 O data1_i [31:0] $end
$var wire 32 P data2_i [31:0] $end
$var wire 1 1 select_i $end
$var wire 32 Q data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 # clk_i $end
$var wire 32 R pc_i [31:0] $end
$var wire 1 & rst_i $end
$var wire 1 ' start_i $end
$var reg 32 S pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 T RDaddr_i [4:0] $end
$var wire 32 U RDdata_i [31:0] $end
$var wire 5 V RS1addr_i [4:0] $end
$var wire 32 W RS1data_o [31:0] $end
$var wire 5 X RS2addr_i [4:0] $end
$var wire 32 Y RS2data_o [31:0] $end
$var wire 1 * RegWrite_i $end
$var wire 1 # clk_i $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 Y
b1010 X
b0 W
b0 V
b1010 U
b101 T
b0 S
b100 R
b1010 Q
b1010 P
b0 O
b0 N
b101000000000001010010011 M
b1010 L
b101000000000001010010011 K
b10011 J
b11 I
b0 H
b0 G
b0 F
b0 E
b11 D
0C
1B
0A
0@
0?
b10011 >
b0 =
b0 <
b0 ;
b100 :
b100 9
b1010 8
b11 7
b1010 6
b1010 5
b0 4
b1010 3
b11 2
11
b1010 0
b101000000000001010010011 /
0.
b1010 -
b100 ,
b0 +
1*
b0 )
b0 (
0'
0&
b1010 %
b0 $
0#
b1010 "
b0 !
$end
#12
1'
1&
#25
b1101 3
b1101 8
b1101 U
b1101 6
b1101 "
b1101 5
b1101 -
b1101 Q
b110 T
b1101 X
b1101 %
b1101 P
b1101 0
b1101 L
b110100000000001100010011 /
b110100000000001100010011 K
b110100000000001100010011 M
b1000 ,
b1000 :
b1000 R
b100 +
b100 ;
b100 N
b100 S
1#
#50
0#
#75
01
b1101 6
b101 2
b101 7
b101 D
b101 I
b11 E
b11 F
b10000010 3
b10000010 8
b10000010 U
b1101 "
b1101 5
b1101 -
b1101 Q
b110011 J
b1 =
b1 H
1@
0B
b110011 >
b111 T
b1101 $
b1101 O
b1101 (
b1101 Y
b110 X
b1010 !
b1010 4
b1010 )
b1010 W
b101 V
b100110 %
b100110 P
b100110 0
b100110 L
b10011000101000001110110011 /
b10011000101000001110110011 K
b10011000101000001110110011 M
b1100 ,
b1100 :
b1100 R
b1000 +
b1000 ;
b1000 N
b1000 S
1#
#100
0#
#125
b10101001 3
b10101001 8
b10101001 U
b11100 T
1.
b1101 !
b1101 4
b1101 )
b1101 W
b110 V
b10011000110000111000110011 /
b10011000110000111000110011 K
b10011000110000111000110011 M
b10000 ,
b10000 :
b10000 R
b1100 +
b1100 ;
b1100 N
b1100 S
1#
#150
0#
#175
11
b1100 3
b1100 8
b1100 U
b11111 6
b11 2
b11 7
b11 D
b11 I
b0 E
b0 F
0.
b11111111111111111111111111111111 "
b11111111111111111111111111111111 5
b11111111111111111111111111111111 -
b11111111111111111111111111111111 Q
b10011 J
b1111111 =
b1111111 H
0@
1B
b10011 >
b110 T
b0 $
b0 O
b0 (
b0 Y
b11111 X
b11111111111111111111111111111111 %
b11111111111111111111111111111111 P
b11111111111111111111111111111111 0
b11111111111111111111111111111111 L
b11111111111100110000001100010011 /
b11111111111100110000001100010011 K
b11111111111100110000001100010011 M
b10100 ,
b10100 :
b10100 R
b10000 +
b10000 ;
b10000 N
b10000 S
1#
#200
0#
#225
b11111 "
b11111 5
b11111 -
b11111 Q
b0 =
b0 H
b11110 T
b0 V
b11111 %
b11111 P
b11111 0
b11111 L
b1111100000000111100010011 /
b1111100000000111100010011 K
b1111100000000111100010011 M
b11111 3
b11111 8
b11111 U
b11000 ,
b11000 :
b11000 R
b10100 +
b10100 ;
b10100 N
b10100 S
b0 !
b0 4
b0 )
b0 W
1#
#250
0#
#275
01
b10 6
b0 2
b0 7
b0 D
b0 I
b11 E
b11 F
b0 3
b0 8
b0 U
b10000010 "
b10000010 5
b10000010 -
b10000010 Q
b110011 J
b111 <
b111 G
1@
0B
b110011 >
b11100 T
b10000010 $
b10000010 O
b10000010 (
b10000010 Y
b111 X
b1100 !
b1100 4
b1100 )
b1100 W
b110 V
b111 %
b111 P
b111 0
b111 L
b11100110111111000110011 /
b11100110111111000110011 K
b11100110111111000110011 M
b11100 ,
b11100 :
b11100 R
b11000 +
b11000 ;
b11000 N
b11000 S
1#
#300
0#
#325
b10000010 3
b10000010 8
b10000010 U
b1 2
b1 7
b1 D
b1 I
b100 <
b100 G
b11101 T
b0 !
b0 4
b0 )
b0 W
b11100 V
b11111100100111010110011 /
b11111100100111010110011 K
b11111100100111010110011 M
b100000 ,
b100000 :
b100000 R
b11100 +
b11100 ;
b11100 N
b11100 S
1#
#350
0#
#375
b0 3
b0 8
b0 U
b0 6
1.
b0 "
b0 5
b0 -
b0 Q
b1110 T
b0 $
b0 O
b0 (
b0 Y
b1101 X
b1010 V
b1101 %
b1101 P
b1101 0
b1101 L
b110101010100011100110011 /
b110101010100011100110011 K
b110101010100011100110011 M
b100100 ,
b100100 :
b100100 R
b100000 +
b100000 ;
b100000 N
b100000 S
1#
#400
0#
#425
b11111111111111111111111101111110 3
b11111111111111111111111101111110 8
b11111111111111111111111101111110 U
b10 6
b100 2
b100 7
b100 D
b100 I
0.
b10000010 "
b10000010 5
b10000010 -
b10000010 Q
b100000 =
b100000 H
b0 <
b0 G
b101 T
b10000010 $
b10000010 O
b10000010 (
b10000010 Y
b111 X
b11100 V
b10000000111 %
b10000000111 P
b10000000111 0
b10000000111 L
b1000000011111100000001010110011 /
b1000000011111100000001010110011 K
b1000000011111100000001010110011 M
b101000 ,
b101000 :
b101000 R
b100100 +
b100100 ;
b100100 N
b100100 S
1#
#450
0#
#475
11
b11111111111111111111111111111000 3
b11111111111111111111111111111000 8
b11111111111111111111111111111000 U
b11000 6
b11 2
b11 7
b11 D
b11 I
b0 E
b0 F
0.
b11111111111111111111111111111000 "
b11111111111111111111111111111000 5
b11111111111111111111111111111000 -
b11111111111111111111111111111000 Q
b10011 J
b1111111 =
b1111111 H
0@
1B
b10011 >
b11111 T
b0 $
b0 O
b0 (
b0 Y
b11000 X
b11111 V
b11111111111111111111111111111000 %
b11111111111111111111111111111000 P
b11111111111111111111111111111000 0
b11111111111111111111111111111000 L
b11111111100011111000111110010011 /
b11111111100011111000111110010011 K
b11111111100011111000111110010011 M
b101100 ,
b101100 :
b101100 R
b101000 +
b101000 ;
b101000 N
b101000 S
1#
#500
0#
#525
b11111111111111111111111111110000 3
b11111111111111111111111111110000 8
b11111111111111111111111111110000 U
b110000 ,
b110000 :
b110000 R
b101100 +
b101100 ;
b101100 N
b101100 S
1.
b11111111111111111111111111111000 !
b11111111111111111111111111111000 4
b11111111111111111111111111111000 )
b11111111111111111111111111111000 W
1#
#550
0#
#575
b11111111111111111111111111101000 3
b11111111111111111111111111101000 8
b11111111111111111111111111101000 U
b110100 ,
b110100 :
b110100 R
b110000 +
b110000 ;
b110000 N
b110000 S
0.
b11111111111111111111111111110000 !
b11111111111111111111111111110000 4
b11111111111111111111111111110000 )
b11111111111111111111111111110000 W
1#
#600
0#
#625
b11111 6
b111111 "
b111111 5
b111111 -
b111111 Q
b1 =
b1 H
b111 T
b11111111111111111111111111101000 $
b11111111111111111111111111101000 O
b11111111111111111111111111101000 (
b11111111111111111111111111101000 Y
b11111 X
b0 V
b111111 %
b111111 P
b111111 0
b111111 L
b11111100000000001110010011 /
b11111100000000001110010011 K
b11111100000000001110010011 M
b111111 3
b111111 8
b111111 U
b111000 ,
b111000 :
b111000 R
b110100 +
b110100 ;
b110100 N
b110100 S
b0 !
b0 4
b0 )
b0 W
1#
#650
0#
#675
b10 6
b110 2
b110 7
b110 D
b110 I
b1111 3
b1111 8
b1111 U
b10000000010 "
b10000000010 5
b10000000010 -
b10000000010 Q
b100000 =
b100000 H
b101 <
b101 G
b0 $
b0 O
b0 (
b0 Y
b10 X
0.
b111111 !
b111111 4
b111111 )
b111111 W
b111 V
b10000000010 %
b10000000010 P
b10000000010 0
b10000000010 L
b1000000001000111101001110010011 /
b1000000001000111101001110010011 K
b1000000001000111101001110010011 M
b111100 ,
b111100 :
b111100 R
b111000 +
b111000 ;
b111000 N
b111000 S
1#
#700
0#
#725
b11 3
b11 8
b11 U
b1000000 ,
b1000000 :
b1000000 R
b111100 +
b111100 ;
b111100 N
b111100 S
b1111 !
b1111 4
b1111 )
b1111 W
1#
#750
0#
#775
b0 3
b0 8
b0 U
b1000100 ,
b1000100 :
b1000100 R
b1000000 +
b1000000 ;
b1000000 N
b1000000 S
b11 !
b11 4
b11 )
b11 W
1#
#800
0#
#825
b1 6
b110 3
b110 8
b110 U
b10000000001 "
b10000000001 5
b10000000001 -
b10000000001 Q
b110 T
b1 X
b110 V
b10000000001 %
b10000000001 P
b10000000001 0
b10000000001 L
b1000000000100110101001100010011 /
b1000000000100110101001100010011 K
b1000000000100110101001100010011 M
b1001000 ,
b1001000 :
b1001000 R
b1000100 +
b1000100 ;
b1000100 N
b1000100 S
b1100 !
b1100 4
b1100 )
b1100 W
1#
#850
0#
#875
b11 3
b11 8
b11 U
b1001100 ,
b1001100 :
b1001100 R
b1001000 +
b1001000 ;
b1001000 N
b1001000 S
b110 !
b110 4
b110 )
b110 W
1#
#900
0#
#925
b1 3
b1 8
b1 U
b1010000 ,
b1010000 :
b1010000 R
b1001100 +
b1001100 ;
b1001100 N
b1001100 S
b11 !
b11 4
b11 )
b11 W
1#
#950
0#
#975
01
b1 6
b10 2
b10 7
b10 D
b10 I
b11 E
b11 F
b1 "
b1 5
b1 -
b1 Q
b110011 J
b0 =
b0 H
b1 <
b1 G
1@
0B
b110011 >
b11111 T
b1 $
b1 O
b1 (
b1 Y
b110 X
b11111 V
b110 %
b110 P
b110 0
b110 L
b11011111001111110110011 /
b11011111001111110110011 K
b11011111001111110110011 M
b11111111111111111111111111010000 3
b11111111111111111111111111010000 8
b11111111111111111111111111010000 U
b1010100 ,
b1010100 :
b1010100 R
b1010000 +
b1010000 ;
b1010000 N
b1010000 S
b11111111111111111111111111101000 !
b11111111111111111111111111101000 4
b11111111111111111111111111101000 )
b11111111111111111111111111101000 W
1#
#1000
0#
#1025
b11111111111111111111111110100000 3
b11111111111111111111111110100000 8
b11111111111111111111111110100000 U
b1011000 ,
b1011000 :
b1011000 R
b1010100 +
b1010100 ;
b1010100 N
b1010100 S
b11111111111111111111111111010000 !
b11111111111111111111111111010000 4
b11111111111111111111111111010000 )
b11111111111111111111111111010000 W
1#
#1050
0#
#1075
11
0*
b0 6
b1111 2
b1111 7
b1111 D
b1111 I
bx E
bx F
1.
b0 "
b0 5
b0 -
b0 Q
b0 J
b0 <
b0 G
0@
b0 >
b0 T
b0 $
b0 O
b0 (
b0 Y
b0 X
b0 V
b0 %
b0 P
b0 0
b0 L
b0 /
b0 K
b0 M
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U
b1011100 ,
b1011100 :
b1011100 R
b1011000 +
b1011000 ;
b1011000 N
b1011000 S
b0 !
b0 4
b0 )
b0 W
1#
#1100
0#
#1125
b1100000 ,
b1100000 :
b1100000 R
b1011100 +
b1011100 ;
b1011100 N
b1011100 S
1#
#1150
0#
#1175
b1100100 ,
b1100100 :
b1100100 R
b1100000 +
b1100000 ;
b1100000 N
b1100000 S
1#
#1200
0#
#1225
b1101000 ,
b1101000 :
b1101000 R
b1100100 +
b1100100 ;
b1100100 N
b1100100 S
1#
#1250
0#
#1275
b1101100 ,
b1101100 :
b1101100 R
b1101000 +
b1101000 ;
b1101000 N
b1101000 S
1#
#1300
0#
#1325
b1110000 ,
b1110000 :
b1110000 R
b1101100 +
b1101100 ;
b1101100 N
b1101100 S
1#
#1350
0#
#1375
b1110100 ,
b1110100 :
b1110100 R
b1110000 +
b1110000 ;
b1110000 N
b1110000 S
1#
#1400
0#
#1425
b1111000 ,
b1111000 :
b1111000 R
b1110100 +
b1110100 ;
b1110100 N
b1110100 S
1#
#1450
0#
#1475
b1111100 ,
b1111100 :
b1111100 R
b1111000 +
b1111000 ;
b1111000 N
b1111000 S
1#
#1500
0#
#1525
b10000000 ,
b10000000 :
b10000000 R
b1111100 +
b1111100 ;
b1111100 N
b1111100 S
1#
