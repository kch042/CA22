$date
	Sat Dec 10 15:11:11 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Mux_4_way $end
$var wire 32 ! data1_i [31:0] $end
$var wire 32 " data2_i [31:0] $end
$var wire 32 # data3_i [31:0] $end
$var wire 32 $ data4_i [31:0] $end
$var wire 2 % select_i [1:0] $end
$var reg 32 & data_o [31:0] $end
$upscope $end
$scope module TestBench $end
$var reg 1 ' Clk $end
$var reg 1 ( Reset $end
$var reg 1 ) Start $end
$var integer 32 * counter [31:0] $end
$var integer 32 + flush [31:0] $end
$var integer 32 , i [31:0] $end
$var integer 32 - outfile [31:0] $end
$var integer 32 . stall [31:0] $end
$scope module CPU $end
$var wire 32 / alu_op1 [31:0] $end
$var wire 1 ' clk_i $end
$var wire 1 ( rst_i $end
$var wire 1 ) start_i $end
$var wire 32 0 rs2_mem [31:0] $end
$var wire 32 1 rs2_exe [31:0] $end
$var wire 32 2 rs2 [31:0] $end
$var wire 32 3 rs1_exe [31:0] $end
$var wire 32 4 rs1 [31:0] $end
$var wire 1 5 regwrite_wb $end
$var wire 1 6 regwrite_mem $end
$var wire 1 7 regwrite_exe $end
$var wire 1 8 regwrite $end
$var wire 32 9 rd_data [31:0] $end
$var wire 5 : rd_addr_wb [4:0] $end
$var wire 5 ; rd_addr_mem [4:0] $end
$var wire 5 < rd_addr_exe [4:0] $end
$var wire 32 = pc [31:0] $end
$var wire 32 > next_pc [31:0] $end
$var wire 1 ? memwrite_mem $end
$var wire 1 @ memwrite_exe $end
$var wire 1 A memwrite $end
$var wire 1 B memread_mem $end
$var wire 1 C memread_exe $end
$var wire 1 D memread $end
$var wire 32 E mem_result_wb [31:0] $end
$var wire 32 F mem_result [31:0] $end
$var wire 1 G mem2reg_wb $end
$var wire 1 H mem2reg_mem $end
$var wire 1 I mem2reg_exe $end
$var wire 1 J mem2reg $end
$var wire 1 K is_zero $end
$var wire 32 L instruction_id [31:0] $end
$var wire 32 M instruction [31:0] $end
$var wire 32 N imm_exe [31:0] $end
$var wire 32 O imm [31:0] $end
$var wire 1 P alusrc_exe $end
$var wire 1 Q alusrc $end
$var wire 4 R aluctrl_exe [3:0] $end
$var wire 4 S aluctrl [3:0] $end
$var wire 32 T alu_result_wb [31:0] $end
$var wire 32 U alu_result_mem [31:0] $end
$var wire 32 V alu_result [31:0] $end
$var wire 32 W alu_op2 [31:0] $end
$scope module ALU $end
$var wire 32 X op1 [31:0] $end
$var wire 1 K zero $end
$var wire 5 Y shamt [4:0] $end
$var wire 32 Z op2 [31:0] $end
$var wire 4 [ aluctrl [3:0] $end
$var reg 32 \ result [31:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 ] data2_i [31:0] $end
$var wire 32 ^ data_o [31:0] $end
$var wire 32 _ data1_i [31:0] $end
$upscope $end
$scope module Control $end
$var wire 3 ` funct3 [2:0] $end
$var wire 7 a funct7 [6:0] $end
$var wire 1 J mem2reg $end
$var wire 1 D memread $end
$var wire 1 A memwrite $end
$var wire 7 b opcode [6:0] $end
$var wire 1 8 regwrite $end
$var wire 1 c is_store $end
$var wire 1 d is_r_type $end
$var wire 1 e is_load $end
$var wire 1 f is_i_type $end
$var wire 1 g is_beq $end
$var wire 1 Q alusrc $end
$var wire 4 h aluctrl [3:0] $end
$var reg 2 i aluop [1:0] $end
$scope module alucontrol $end
$var wire 2 j aluop [1:0] $end
$var wire 3 k funct3 [2:0] $end
$var wire 7 l funct7 [6:0] $end
$var reg 4 m aluctrl [3:0] $end
$upscope $end
$upscope $end
$scope module Data_Memory $end
$var wire 1 ' clk_i $end
$var wire 32 n data_o [31:0] $end
$var wire 32 o data_i [31:0] $end
$var wire 32 p addr_i [31:0] $end
$var wire 1 ? MemWrite_i $end
$var wire 1 B MemRead_i $end
$upscope $end
$scope module EXE_MEM $end
$var wire 32 q alu_result_in [31:0] $end
$var wire 1 ' clk $end
$var wire 1 7 regwrite_in $end
$var wire 5 r rd_addr_in [4:0] $end
$var wire 1 @ memwrite_in $end
$var wire 32 s memwrite_addr_in [31:0] $end
$var wire 1 C memread_in $end
$var wire 1 I mem2reg_in $end
$var reg 32 t alu_result_out [31:0] $end
$var reg 1 H mem2reg_out $end
$var reg 1 B memread_out $end
$var reg 32 u memwrite_addr_out [31:0] $end
$var reg 1 ? memwrite_out $end
$var reg 5 v rd_addr_out [4:0] $end
$var reg 1 6 regwrite_out $end
$upscope $end
$scope module ID_EXE $end
$var wire 4 w aluctrl_in [3:0] $end
$var wire 1 Q alusrc_in $end
$var wire 1 ' clk $end
$var wire 1 J mem2reg_in $end
$var wire 1 D memread_in $end
$var wire 1 A memwrite_in $end
$var wire 5 x rd_addr_in [4:0] $end
$var wire 1 8 regwrite_in $end
$var wire 32 y rs2_in [31:0] $end
$var wire 32 z rs1_in [31:0] $end
$var wire 32 { imm_in [31:0] $end
$var reg 4 | aluctrl_out [3:0] $end
$var reg 1 P alusrc_out $end
$var reg 32 } imm_out [31:0] $end
$var reg 1 I mem2reg_out $end
$var reg 1 C memread_out $end
$var reg 1 @ memwrite_out $end
$var reg 5 ~ rd_addr_out [4:0] $end
$var reg 1 7 regwrite_out $end
$var reg 32 !" rs1_out [31:0] $end
$var reg 32 "" rs2_out [31:0] $end
$upscope $end
$scope module IF_ID $end
$var wire 1 ' clk $end
$var wire 32 #" instruction_in [31:0] $end
$var reg 32 $" instruction_out [31:0] $end
$upscope $end
$scope module Imm_Gen $end
$var wire 32 %" instruction [31:0] $end
$var wire 7 &" opcode [6:0] $end
$var reg 32 '" imm [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 (" instr_o [31:0] $end
$var wire 32 )" addr_i [31:0] $end
$upscope $end
$scope module M2_ALU $end
$var wire 32 *" data1_i [31:0] $end
$var wire 32 +" data2_i [31:0] $end
$var wire 1 P select_i $end
$var wire 32 ," data_o [31:0] $end
$upscope $end
$scope module M2_WB $end
$var wire 1 G select_i $end
$var wire 32 -" data_o [31:0] $end
$var wire 32 ." data2_i [31:0] $end
$var wire 32 /" data1_i [31:0] $end
$upscope $end
$scope module MEM_WB $end
$var wire 32 0" alu_result_in [31:0] $end
$var wire 1 ' clk $end
$var wire 1 H mem2reg_in $end
$var wire 32 1" mem_result_in [31:0] $end
$var wire 5 2" rd_addr_in [4:0] $end
$var wire 1 6 regwrite_in $end
$var reg 32 3" alu_result_out [31:0] $end
$var reg 1 G mem2reg_out $end
$var reg 32 4" mem_result_out [31:0] $end
$var reg 5 5" rd_addr_out [4:0] $end
$var reg 1 5 regwrite_out $end
$upscope $end
$scope module PC $end
$var wire 1 ' clk_i $end
$var wire 32 6" pc_i [31:0] $end
$var wire 1 ( rst_i $end
$var wire 1 ) start_i $end
$var reg 32 7" pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 8" RDaddr_i [4:0] $end
$var wire 32 9" RDdata_i [31:0] $end
$var wire 5 :" RS1addr_i [4:0] $end
$var wire 5 ;" RS2addr_i [4:0] $end
$var wire 1 5 RegWrite_i $end
$var wire 1 ' clk_i $end
$var wire 32 <" RS2data_o [31:0] $end
$var wire 32 =" RS1data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b100 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b101000000000001000010011 ("
b0 '"
b0 &"
b0 %"
b0 $"
b101000000000001000010011 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b1111 w
b0 v
bx u
b0 t
b0 s
b0 r
b0 q
b0 p
bx o
b0 n
b1111 m
b0 l
b0 k
bx j
bx i
b1111 h
0g
0f
0e
0d
0c
b0 b
b0 a
b0 `
b0 _
b100 ^
b100 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b1111 S
b0 R
1Q
0P
b0 O
b0 N
b101000000000001000010011 M
b0 L
1K
0J
0I
0H
0G
b0 F
b0 E
0D
0C
0B
0A
0@
0?
b100 >
b0 =
b0 <
b0 ;
b0 :
b0 9
08
07
06
05
b0 4
b0 3
b0 2
b0 1
bx 0
b0 /
b0 .
b11 -
b100000 ,
b0 +
b0 *
0)
0(
0'
bx &
bz %
bz $
bz #
bz "
bz !
$end
#12
1)
1(
#25
18
b11 S
b11 h
b11 m
b11 w
b0 i
b0 j
b1010 O
b1010 {
b1010 '"
b10011 &"
b100 x
1f
b10011 b
b1010 ;"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx V
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx q
b110000000000001010010011 M
b110000000000001010010011 #"
b110000000000001010010011 ("
b101000000000001000010011 L
b101000000000001000010011 $"
b101000000000001000010011 %"
b1111 R
b1111 [
b1111 |
1P
b0 0
b0 o
b0 u
b1000 >
b1000 ^
b1000 6"
b100 =
b100 _
b100 )"
b100 7"
b1 *
1'
#50
0'
#75
b1010 Y
b1010 V
b1010 \
b1010 q
0K
b1010 W
b1010 Z
b1010 ,"
b1100 O
b1100 {
b1100 '"
b101 x
b1100 ;"
b11111111001100000000001100010011 M
b11111111001100000000001100010011 #"
b11111111001100000000001100010011 ("
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx p
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx t
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0"
17
b11 R
b11 [
b11 |
b1010 N
b1010 }
b1010 +"
b100 <
b100 r
b100 ~
b110000000000001010010011 L
b110000000000001010010011 $"
b110000000000001010010011 %"
b1100 >
b1100 ^
b1100 6"
b1000 =
b1000 _
b1000 )"
b1000 7"
b10 *
1'
#100
0'
#125
b1100 Y
b1100 V
b1100 \
b1100 q
b11111111111111111111111111110011 O
b11111111111111111111111111110011 {
b11111111111111111111111111110011 '"
b110 x
b1111111 a
b1111111 l
b10011 ;"
b1100 W
b1100 Z
b1100 ,"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9"
b1000000000000001110010011 M
b1000000000000001110010011 #"
b1000000000000001110010011 ("
b11111111001100000000001100010011 L
b11111111001100000000001100010011 $"
b11111111001100000000001100010011 %"
b1100 N
b1100 }
b1100 +"
b101 <
b101 r
b101 ~
b1010 U
b1010 p
b1010 t
b1010 0"
b100 ;
b100 v
b100 2"
16
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx T
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3"
b10000 >
b10000 ^
b10000 6"
b1100 =
b1100 _
b1100 )"
b1100 7"
b11 *
1'
#150
0'
#175
b10011 Y
b11111111111111111111111111110011 V
b11111111111111111111111111110011 \
b11111111111111111111111111110011 q
b1010 9
b1010 -"
b1010 9"
b11111111111111111111111111110011 W
b11111111111111111111111111110011 Z
b11111111111111111111111111110011 ,"
b10000 O
b10000 {
b10000 '"
b111 x
b0 a
b0 l
b10000 ;"
b10010000000011 M
b10010000000011 #"
b10010000000011 ("
b1010 T
b1010 /"
b1010 3"
b100 :
b100 5"
b100 8"
15
b1100 U
b1100 p
b1100 t
b1100 0"
b101 ;
b101 v
b101 2"
b11111111111111111111111111110011 N
b11111111111111111111111111110011 }
b11111111111111111111111111110011 +"
b110 <
b110 r
b110 ~
b1000000000000001110010011 L
b1000000000000001110010011 $"
b1000000000000001110010011 %"
b10100 >
b10100 ^
b10100 6"
b10000 =
b10000 _
b10000 )"
b10000 7"
b100 *
1'
#200
0'
#225
b10000 Y
b10000 V
b10000 \
b10000 q
b0 O
b0 {
b0 '"
b11 &"
b1000 x
b10 `
b10 k
0f
1J
1D
1e
b11 b
b0 ;"
b10000 W
b10000 Z
b10000 ,"
b1100 9
b1100 -"
b1100 9"
b10000000010010010000011 M
b10000000010010010000011 #"
b10000000010010010000011 ("
b10010000000011 L
b10010000000011 $"
b10010000000011 %"
b10000 N
b10000 }
b10000 +"
b111 <
b111 r
b111 ~
b11111111111111111111111111110011 U
b11111111111111111111111111110011 p
b11111111111111111111111111110011 t
b11111111111111111111111111110011 0"
b110 ;
b110 v
b110 2"
b1100 T
b1100 /"
b1100 3"
b101 :
b101 5"
b101 8"
b11000 >
b11000 ^
b11000 6"
b10100 =
b10100 _
b10100 )"
b10100 7"
b101 *
1'
#250
0'
#275
b0 Y
b0 V
b0 \
b0 q
b1010 2
b1010 y
b1010 <"
b11111111111111111111111111110011 9
b11111111111111111111111111110011 -"
b11111111111111111111111111110011 9"
1K
b0 W
b0 Z
b0 ,"
b100 O
b100 {
b100 '"
b1001 x
b100 ;"
b100000000010010100000011 M
b100000000010010100000011 #"
b100000000010010100000011 ("
b11111111111111111111111111110011 T
b11111111111111111111111111110011 /"
b11111111111111111111111111110011 3"
b110 :
b110 5"
b110 8"
b10000 U
b10000 p
b10000 t
b10000 0"
b111 ;
b111 v
b111 2"
1I
1C
b0 N
b0 }
b0 +"
b1000 <
b1000 r
b1000 ~
b10000000010010010000011 L
b10000000010010010000011 $"
b10000000010010010000011 %"
b11100 >
b11100 ^
b11100 6"
b11000 =
b11000 _
b11000 )"
b11000 7"
b110 *
1'
#300
0'
#325
b0 2
b0 y
b0 <"
b100 Y
b100 V
b100 \
b100 q
b1000 O
b1000 {
b1000 '"
b1010 x
b1000 ;"
0K
b100 W
b100 Z
b100 ,"
b101 F
b101 n
b101 1"
b10000 9
b10000 -"
b10000 9"
b11000101010000000100011 M
b11000101010000000100011 #"
b11000101010000000100011 ("
b100000000010010100000011 L
b100000000010010100000011 $"
b100000000010010100000011 %"
b100 N
b100 }
b100 +"
b1001 <
b1001 r
b1001 ~
b1010 1
b1010 s
b1010 ""
b1010 *"
b0 U
b0 p
b0 t
b0 0"
b1000 ;
b1000 v
b1000 2"
1H
1B
b10000 T
b10000 /"
b10000 3"
b111 :
b111 5"
b111 8"
b100000 >
b100000 ^
b100000 6"
b11100 =
b11100 _
b11100 )"
b11100 7"
b111 *
1'
#350
0'
#375
b110 F
b110 n
b110 1"
b1000 Y
b1000 V
b1000 \
b1000 q
08
b11111111111111111111111111110011 2
b11111111111111111111111111110011 y
b11111111111111111111111111110011 <"
b1100 4
b1100 z
b1100 ="
b101 9
b101 -"
b101 9"
b1000 W
b1000 Z
b1000 ,"
b0 O
b0 {
b0 '"
b100011 &"
b0 x
0J
0D
0e
1A
1c
b100011 b
b110 ;"
b101 :"
b11100111000000100000110011 M
b11100111000000100000110011 #"
b11100111000000100000110011 ("
b101 E
b101 ."
b101 4"
b0 T
b0 /"
b0 3"
b1000 :
b1000 5"
b1000 8"
1G
b100 U
b100 p
b100 t
b100 0"
b1001 ;
b1001 v
b1001 2"
b1010 0
b1010 o
b1010 u
b1000 N
b1000 }
b1000 +"
b1010 <
b1010 r
b1010 ~
b0 1
b0 s
b0 ""
b0 *"
b11000101010000000100011 L
b11000101010000000100011 $"
b11000101010000000100011 %"
b100100 >
b100100 ^
b100100 6"
b100000 =
b100000 _
b100000 )"
b100000 7"
b1000 *
1'
#400
0'
#425
0Q
18
b101 S
b101 h
b101 m
b101 w
b11 i
b11 j
b11111111111111111111111111100111 2
b11111111111111111111111111100111 y
b11111111111111111111111111100111 <"
b11111111111111111111111111101000 4
b11111111111111111111111111101000 z
b11111111111111111111111111101000 ="
b0 Y
b1010 F
b1010 n
b1010 1"
b111001 O
b111001 {
b111001 '"
b110011 &"
b10000 x
b1 a
b1 l
b0 `
b0 k
1d
0A
0c
b110011 b
b11001 ;"
b11000 :"
b0 W
b0 Z
b0 ,"
b1100 V
b1100 \
b1100 q
b110 9
b110 -"
b110 9"
b11101111010000100010110011 M
b11101111010000100010110011 #"
b11101111010000100010110011 ("
b11100111000000100000110011 L
b11100111000000100000110011 $"
b11100111000000100000110011 %"
07
0I
0C
1@
b0 N
b0 }
b0 +"
b0 <
b0 r
b0 ~
b11111111111111111111111111110011 1
b11111111111111111111111111110011 s
b11111111111111111111111111110011 ""
b11111111111111111111111111110011 *"
b1100 /
b1100 X
b1100 3
b1100 !"
b1000 U
b1000 p
b1000 t
b1000 0"
b1010 ;
b1010 v
b1010 2"
b0 0
b0 o
b0 u
b110 E
b110 ."
b110 4"
b100 T
b100 /"
b100 3"
b1001 :
b1001 5"
b1001 8"
b101000 >
b101000 ^
b101000 6"
b100100 =
b100100 _
b100100 )"
b100100 7"
b1001 *
1'
#450
0'
#475
b111 Y
b11111111111111111111111111100101 2
b11111111111111111111111111100101 y
b11111111111111111111111111100101 <"
b11111111111111111111111111100110 4
b11111111111111111111111111100110 z
b11111111111111111111111111100110 ="
b1010 9
b1010 -"
b1010 9"
b0 F
b0 n
b0 1"
b11111111111111111111111111100111 W
b11111111111111111111111111100111 Z
b11111111111111111111111111100111 ,"
b1001011000 V
b1001011000 \
b1001011000 q
b111011 O
b111011 {
b111011 '"
b10001 x
b11011 ;"
b11010 :"
b11110111100000100100110011 M
b11110111100000100100110011 #"
b11110111100000100100110011 ("
b1010 E
b1010 ."
b1010 4"
b1000 T
b1000 /"
b1000 3"
b1010 :
b1010 5"
b1010 8"
b1100 U
b1100 p
b1100 t
b1100 0"
b0 ;
b0 v
b0 2"
b11111111111111111111111111110011 0
b11111111111111111111111111110011 o
b11111111111111111111111111110011 u
06
0H
1?
0B
17
0@
b101 R
b101 [
b101 |
0P
b111001 N
b111001 }
b111001 +"
b10000 <
b10000 r
b10000 ~
b11111111111111111111111111100111 1
b11111111111111111111111111100111 s
b11111111111111111111111111100111 ""
b11111111111111111111111111100111 *"
b11111111111111111111111111101000 /
b11111111111111111111111111101000 X
b11111111111111111111111111101000 3
b11111111111111111111111111101000 !"
b11101111010000100010110011 L
b11101111010000100010110011 $"
b11101111010000100010110011 %"
b101100 >
b101100 ^
b101100 6"
b101000 =
b101000 _
b101000 )"
b101000 7"
b1010 *
1'
#500
0'
#525
b111010 2
b111010 y
b111010 <"
b111000 4
b111000 z
b111000 ="
b101 Y
b111101 O
b111101 {
b111101 '"
b10010 x
b11101 ;"
b11100 :"
b11111111111111111111111111100101 W
b11111111111111111111111111100101 Z
b11111111111111111111111111100101 ,"
b1010111110 V
b1010111110 \
b1010111110 q
b1100 9
b1100 -"
b1100 9"
b11111111110000100110110011 M
b11111111110000100110110011 #"
b11111111110000100110110011 ("
b11110111100000100100110011 L
b11110111100000100100110011 $"
b11110111100000100100110011 %"
b111011 N
b111011 }
b111011 +"
b10001 <
b10001 r
b10001 ~
b11111111111111111111111111100101 1
b11111111111111111111111111100101 s
b11111111111111111111111111100101 ""
b11111111111111111111111111100101 *"
b11111111111111111111111111100110 /
b11111111111111111111111111100110 X
b11111111111111111111111111100110 3
b11111111111111111111111111100110 !"
b1001011000 U
b1001011000 p
b1001011000 t
b1001011000 0"
b10000 ;
b10000 v
b10000 2"
b11111111111111111111111111100111 0
b11111111111111111111111111100111 o
b11111111111111111111111111100111 u
16
0?
b0 E
b0 ."
b0 4"
b1100 T
b1100 /"
b1100 3"
b0 :
b0 5"
b0 8"
05
0G
b110000 >
b110000 ^
b110000 6"
b101100 =
b101100 _
b101100 )"
b101100 7"
b1011 *
1'
#550
0'
#575
b11010 Y
b111110 2
b111110 y
b111110 <"
b111100 4
b111100 z
b111100 ="
b1001011000 9
b1001011000 -"
b1001011000 9"
b111010 W
b111010 Z
b111010 ,"
b110010110000 V
b110010110000 \
b110010110000 q
b111111 O
b111111 {
b111111 '"
b10011 x
b11111 ;"
b11110 :"
b1000000111010000000100011 M
b1000000111010000000100011 #"
b1000000111010000000100011 ("
b1001011000 T
b1001011000 /"
b1001011000 3"
b10000 :
b10000 5"
b10000 8"
15
b1010111110 U
b1010111110 p
b1010111110 t
b1010111110 0"
b10001 ;
b10001 v
b10001 2"
b11111111111111111111111111100101 0
b11111111111111111111111111100101 o
b11111111111111111111111111100101 u
b111101 N
b111101 }
b111101 +"
b10010 <
b10010 r
b10010 ~
b111010 1
b111010 s
b111010 ""
b111010 *"
b111000 /
b111000 X
b111000 3
b111000 !"
b11111111110000100110110011 L
b11111111110000100110110011 $"
b11111111110000100110110011 %"
b110100 >
b110100 ^
b110100 6"
b110000 =
b110000 _
b110000 )"
b110000 7"
b1100 *
1'
#600
0'
#625
1Q
08
b11 S
b11 h
b11 m
b11 w
b0 i
b0 j
b1001011000 2
b1001011000 y
b1001011000 <"
b10000 4
b10000 z
b10000 ="
b11110 Y
b0 O
b0 {
b0 '"
b100011 &"
b0 x
b0 a
b0 l
b10 `
b10 k
0d
1A
1c
b100011 b
b10000 ;"
b111 :"
b111110 W
b111110 Z
b111110 ,"
b111010001000 V
b111010001000 \
b111010001000 q
b1010111110 9
b1010111110 -"
b1010111110 9"
b1000100000010001000100011 M
b1000100000010001000100011 #"
b1000100000010001000100011 ("
b1000000111010000000100011 L
b1000000111010000000100011 $"
b1000000111010000000100011 %"
b111111 N
b111111 }
b111111 +"
b10011 <
b10011 r
b10011 ~
b111110 1
b111110 s
b111110 ""
b111110 *"
b111100 /
b111100 X
b111100 3
b111100 !"
b110010110000 U
b110010110000 p
b110010110000 t
b110010110000 0"
b10010 ;
b10010 v
b10010 2"
b111010 0
b111010 o
b111010 u
b1010111110 T
b1010111110 /"
b1010111110 3"
b10001 :
b10001 5"
b10001 8"
b111000 >
b111000 ^
b111000 6"
b110100 =
b110100 _
b110100 )"
b110100 7"
b1101 *
1'
#650
0'
#675
b0 Y
b1010111110 2
b1010111110 y
b1010111110 <"
b0 4
b0 z
b0 ="
b110010110000 9
b110010110000 -"
b110010110000 9"
b0 W
b0 Z
b0 ,"
b10000 V
b10000 \
b10000 q
b100 O
b100 {
b100 '"
b100 x
b10001 ;"
b0 :"
b0 M
b0 #"
b0 ("
b110010110000 T
b110010110000 /"
b110010110000 3"
b10010 :
b10010 5"
b10010 8"
b111010001000 U
b111010001000 p
b111010001000 t
b111010001000 0"
b10011 ;
b10011 v
b10011 2"
b111110 0
b111110 o
b111110 u
07
1@
b11 R
b11 [
b11 |
1P
b0 N
b0 }
b0 +"
b0 <
b0 r
b0 ~
b1001011000 1
b1001011000 s
b1001011000 ""
b1001011000 *"
b10000 /
b10000 X
b10000 3
b10000 !"
b1000100000010001000100011 L
b1000100000010001000100011 $"
b1000100000010001000100011 %"
b111100 >
b111100 ^
b111100 6"
b111000 =
b111000 _
b111000 )"
b111000 7"
b1110 *
1'
#700
0'
#725
b1111 S
b1111 h
b1111 m
b1111 w
bx i
bx j
b0 2
b0 y
b0 <"
b100 Y
b0 O
b0 {
b0 '"
b0 &"
b0 x
b0 `
b0 k
0A
0c
b0 b
b0 ;"
b100 W
b100 Z
b100 ,"
b100 V
b100 \
b100 q
b111010001000 9
b111010001000 -"
b111010001000 9"
b0 L
b0 $"
b0 %"
b100 N
b100 }
b100 +"
b100 <
b100 r
b100 ~
b1010111110 1
b1010111110 s
b1010111110 ""
b1010111110 *"
0K
b0 /
b0 X
b0 3
b0 !"
b10000 U
b10000 p
b10000 t
b10000 0"
b0 ;
b0 v
b0 2"
b1001011000 0
b1001011000 o
b1001011000 u
06
1?
b111010001000 T
b111010001000 /"
b111010001000 3"
b10011 :
b10011 5"
b10011 8"
b1000000 >
b1000000 ^
b1000000 6"
b111100 =
b111100 _
b111100 )"
b111100 7"
b1111 *
1'
#750
0'
#775
b0 Y
b10000 9
b10000 -"
b10000 9"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx V
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx q
1K
b0 W
b0 Z
b0 ,"
b10000 T
b10000 /"
b10000 3"
b0 :
b0 5"
b0 8"
05
b100 U
b100 p
b100 t
b100 0"
b100 ;
b100 v
b100 2"
b1010111110 0
b1010111110 o
b1010111110 u
0@
b1111 R
b1111 [
b1111 |
b0 N
b0 }
b0 +"
b0 <
b0 r
b0 ~
b0 1
b0 s
b0 ""
b0 *"
b1000100 >
b1000100 ^
b1000100 6"
b1000000 =
b1000000 _
b1000000 )"
b1000000 7"
b10000 *
1'
#800
0'
#825
b100 9
b100 -"
b100 9"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx U
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx p
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx t
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0"
b0 ;
b0 v
b0 2"
b0 0
b0 o
b0 u
0?
b100 T
b100 /"
b100 3"
b100 :
b100 5"
b100 8"
b1001000 >
b1001000 ^
b1001000 6"
b1000100 =
b1000100 _
b1000100 )"
b1000100 7"
b10001 *
1'
#850
0'
#875
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx -"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx T
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3"
b0 :
b0 5"
b0 8"
b1001100 >
b1001100 ^
b1001100 6"
b1001000 =
b1001000 _
b1001000 )"
b1001000 7"
b10010 *
1'
#900
0'
#925
b1010000 >
b1010000 ^
b1010000 6"
b1001100 =
b1001100 _
b1001100 )"
b1001100 7"
b10011 *
1'
#950
0'
#975
b1010100 >
b1010100 ^
b1010100 6"
b1010000 =
b1010000 _
b1010000 )"
b1010000 7"
b10100 *
1'
#1000
0'
#1025
b1011000 >
b1011000 ^
b1011000 6"
b1010100 =
b1010100 _
b1010100 )"
b1010100 7"
b10101 *
1'
#1050
0'
#1075
b1011100 >
b1011100 ^
b1011100 6"
b1011000 =
b1011000 _
b1011000 )"
b1011000 7"
b10110 *
1'
#1100
0'
#1125
b1100000 >
b1100000 ^
b1100000 6"
b1011100 =
b1011100 _
b1011100 )"
b1011100 7"
b10111 *
1'
#1150
0'
#1175
b1100100 >
b1100100 ^
b1100100 6"
b1100000 =
b1100000 _
b1100000 )"
b1100000 7"
b11000 *
1'
#1200
0'
#1225
b1101000 >
b1101000 ^
b1101000 6"
b1100100 =
b1100100 _
b1100100 )"
b1100100 7"
b11001 *
1'
#1250
0'
#1275
b1101100 >
b1101100 ^
b1101100 6"
b1101000 =
b1101000 _
b1101000 )"
b1101000 7"
b11010 *
1'
#1300
0'
#1325
b1110000 >
b1110000 ^
b1110000 6"
b1101100 =
b1101100 _
b1101100 )"
b1101100 7"
b11011 *
1'
#1350
0'
#1375
b1110100 >
b1110100 ^
b1110100 6"
b1110000 =
b1110000 _
b1110000 )"
b1110000 7"
b11100 *
1'
#1400
0'
#1425
b1111000 >
b1111000 ^
b1111000 6"
b1110100 =
b1110100 _
b1110100 )"
b1110100 7"
b11101 *
1'
#1450
0'
#1475
b1111100 >
b1111100 ^
b1111100 6"
b1111000 =
b1111000 _
b1111000 )"
b1111000 7"
b11110 *
1'
#1500
0'
#1525
b10000000 >
b10000000 ^
b10000000 6"
b1111100 =
b1111100 _
b1111100 )"
b1111100 7"
b11111 *
1'
#1550
0'
#1575
b10000100 >
b10000100 ^
b10000100 6"
b10000000 =
b10000000 _
b10000000 )"
b10000000 7"
b100000 *
1'
#1600
0'
#1625
b10001000 >
b10001000 ^
b10001000 6"
b10000100 =
b10000100 _
b10000100 )"
b10000100 7"
b100001 *
1'
#1650
0'
#1675
b10001100 >
b10001100 ^
b10001100 6"
b10001000 =
b10001000 _
b10001000 )"
b10001000 7"
b100010 *
1'
#1700
0'
#1725
b10010000 >
b10010000 ^
b10010000 6"
b10001100 =
b10001100 _
b10001100 )"
b10001100 7"
b100011 *
1'
#1750
0'
#1775
b10010100 >
b10010100 ^
b10010100 6"
b10010000 =
b10010000 _
b10010000 )"
b10010000 7"
b100100 *
1'
#1800
0'
#1825
b10011000 >
b10011000 ^
b10011000 6"
b10010100 =
b10010100 _
b10010100 )"
b10010100 7"
b100101 *
1'
#1850
0'
#1875
b10011100 >
b10011100 ^
b10011100 6"
b10011000 =
b10011000 _
b10011000 )"
b10011000 7"
b100110 *
1'
#1900
0'
#1925
b10100000 >
b10100000 ^
b10100000 6"
b10011100 =
b10011100 _
b10011100 )"
b10011100 7"
b100111 *
1'
#1950
0'
#1975
b10100100 >
b10100100 ^
b10100100 6"
b10100000 =
b10100000 _
b10100000 )"
b10100000 7"
b101000 *
1'
#2000
0'
#2025
b10101000 >
b10101000 ^
b10101000 6"
b10100100 =
b10100100 _
b10100100 )"
b10100100 7"
b101001 *
1'
#2050
0'
#2075
b10101100 >
b10101100 ^
b10101100 6"
b10101000 =
b10101000 _
b10101000 )"
b10101000 7"
b101010 *
1'
#2100
0'
#2125
b10110000 >
b10110000 ^
b10110000 6"
b10101100 =
b10101100 _
b10101100 )"
b10101100 7"
b101011 *
1'
#2150
0'
#2175
b10110100 >
b10110100 ^
b10110100 6"
b10110000 =
b10110000 _
b10110000 )"
b10110000 7"
b101100 *
1'
#2200
0'
#2225
b10111000 >
b10111000 ^
b10111000 6"
b10110100 =
b10110100 _
b10110100 )"
b10110100 7"
b101101 *
1'
#2250
0'
#2275
b10111100 >
b10111100 ^
b10111100 6"
b10111000 =
b10111000 _
b10111000 )"
b10111000 7"
b101110 *
1'
#2300
0'
#2325
b11000000 >
b11000000 ^
b11000000 6"
b10111100 =
b10111100 _
b10111100 )"
b10111100 7"
b101111 *
1'
#2350
0'
#2375
b11000100 >
b11000100 ^
b11000100 6"
b11000000 =
b11000000 _
b11000000 )"
b11000000 7"
b110000 *
1'
#2400
0'
#2425
b11001000 >
b11001000 ^
b11001000 6"
b11000100 =
b11000100 _
b11000100 )"
b11000100 7"
b110001 *
1'
#2450
0'
#2475
b11001100 >
b11001100 ^
b11001100 6"
b11001000 =
b11001000 _
b11001000 )"
b11001000 7"
b110010 *
1'
#2500
0'
#2525
b11010000 >
b11010000 ^
b11010000 6"
b11001100 =
b11001100 _
b11001100 )"
b11001100 7"
b110011 *
1'
#2550
0'
#2575
b11010100 >
b11010100 ^
b11010100 6"
b11010000 =
b11010000 _
b11010000 )"
b11010000 7"
b110100 *
1'
#2600
0'
#2625
b11011000 >
b11011000 ^
b11011000 6"
b11010100 =
b11010100 _
b11010100 )"
b11010100 7"
b110101 *
1'
#2650
0'
#2675
b11011100 >
b11011100 ^
b11011100 6"
b11011000 =
b11011000 _
b11011000 )"
b11011000 7"
b110110 *
1'
#2700
0'
#2725
b11100000 >
b11100000 ^
b11100000 6"
b11011100 =
b11011100 _
b11011100 )"
b11011100 7"
b110111 *
1'
#2750
0'
#2775
b11100100 >
b11100100 ^
b11100100 6"
b11100000 =
b11100000 _
b11100000 )"
b11100000 7"
b111000 *
1'
#2800
0'
#2825
b11101000 >
b11101000 ^
b11101000 6"
b11100100 =
b11100100 _
b11100100 )"
b11100100 7"
b111001 *
1'
#2850
0'
#2875
b11101100 >
b11101100 ^
b11101100 6"
b11101000 =
b11101000 _
b11101000 )"
b11101000 7"
b111010 *
1'
#2900
0'
#2925
b11110000 >
b11110000 ^
b11110000 6"
b11101100 =
b11101100 _
b11101100 )"
b11101100 7"
b111011 *
1'
#2950
0'
#2975
b11110100 >
b11110100 ^
b11110100 6"
b11110000 =
b11110000 _
b11110000 )"
b11110000 7"
b111100 *
1'
#3000
0'
#3025
b11111000 >
b11111000 ^
b11111000 6"
b11110100 =
b11110100 _
b11110100 )"
b11110100 7"
b111101 *
1'
#3050
0'
#3075
b11111100 >
b11111100 ^
b11111100 6"
b11111000 =
b11111000 _
b11111000 )"
b11111000 7"
b111110 *
1'
#3100
0'
#3125
b100000000 >
b100000000 ^
b100000000 6"
b11111100 =
b11111100 _
b11111100 )"
b11111100 7"
b111111 *
1'
#3150
0'
#3175
b100000100 >
b100000100 ^
b100000100 6"
b100000000 =
b100000000 _
b100000000 )"
b100000000 7"
b1000000 *
1'
#3200
0'
#3225
b100001000 >
b100001000 ^
b100001000 6"
b100000100 =
b100000100 _
b100000100 )"
b100000100 7"
1'
